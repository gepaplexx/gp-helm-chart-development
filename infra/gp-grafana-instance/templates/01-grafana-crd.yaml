apiVersion: integreatly.org/v1alpha1
kind: Grafana
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  baseImage: {{ .Values.grafana.version}}
  ingress:
    enabled: true
    pathType: Prefix
    path: "/"
    hostname: {{ .Values.ingress.hostname }}
  config:
    server:
      root_url: https://{{ .Values.ingress.hostname }}
    auth:
      disable_login_form: False
      disable_signout_menu: False
    auth.generic_oauth:
      client_id: {{ .Values.sso.keycloak.clientId}}
      enabled: true
      client_secret: ""
      allow_sign_up: true
      token_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/token
      api_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/userinfo
      role_attribute_path: >-
        contains(groups[*], '{{ .Values.auth.adminGroups }}') && 'Admin' || contains(groups[*],
        '{{ .Values.auth.editorGroups }}') && 'Editor' || 'Viewer'
      auth_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/auth
      scopes: profile
    auth.anonymous:
      enabled: false
    log:
      level: warn
      mode: console
    log.frontend:
      enabled: true
    security:
      admin_user: {{ default "admin" .Values.auth.admin.user }}
  dashboardLabelSelector:
    - matchExpressions:
        - key: dashboard
          operator: In
          values:
            - system
            - application
  deployment:
    env:
      - name: SERVICE_CA
        valueFrom:
          configMapKeyRef:
            key: service-ca.crt
            name: openshift-service-ca.crt
      - name: LOKI_GATEWAY_ADDRESS
        value: 'https://logging-loki-gateway-http.openshift-logging.svc.cluster.local:8080/api/logs/v1'
      - name: THANOS_QUERIER_ADDRESS
        value: 'https://thanos-querier.openshift-monitoring.svc.cluster.local:9091'
      - name: BEARER_TOKEN
        valueFrom:
          secretKeyRef:
            key: token
            name: grafana-serviceaccount-token
  containers:
    - args:
        - /opt/bitnami/nginx/conf/shells/nginx.sh
      command:
        - bash
      image: 'bitnami/nginx:1.23.2-debian-11-r2'
      name: bearer-alertmanager-proxy
      ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      volumeMounts:
        - mountPath: /opt/bitnami/nginx/conf/shells
          name: configmap-nginx-config
          readOnly: false
        - mountPath: /app/nginx/bearer
          name: secret-grafana-serviceaccount-token
          readOnly: true
  secrets:
    - grafana-serviceaccount-token
  configMaps:
    - nginx-config