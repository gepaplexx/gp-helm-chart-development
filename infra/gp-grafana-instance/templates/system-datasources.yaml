{{- if .Values.systemDatasources }}
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  instanceSelector:
    matchLabels:
      monitoring.gepardec.com/system: "true"
  datasource:
      name: Prometheus
      uid: prometheus
      type: prometheus
      url: ${THANOS_QUERIER_ADDRESS}
      access: proxy
      editable: true
      isDefault: true
      jsonData:
        httpMethod: POST
        httpHeaderName1: Authorization
        oauthPassThru: false
        tlsAuthWithCACert: true
      secureJsonData:
        httpHeaderValue1: Bearer ${BEARER_TOKEN}
        tlsCACert: ${SERVICE_CA}
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: loki-application
  namespace: {{ .Release.Namespace }}
spec:
  instanceSelector:
    matchLabels:
      monitoring.gepardec.com/system: "true"
  datasource:
      name: Loki (Application)
      uid: logging-application
      type: loki
      url: ${LOKI_GATEWAY_ADDRESS}/application/
      access: proxy
      editable: true
      isDefault: false
      jsonData:
        httpMethod: POST
        httpHeaderName1: Authorization
        oauthPassThru: false
        tlsAuthWithCACert: true
        manageAlerts: false
      secureJsonData:
        httpHeaderValue1: Bearer ${BEARER_TOKEN}
        tlsCACert: ${SERVICE_CA}
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: loki-infrastructure
  namespace: {{ .Release.Namespace }}
spec:
  instanceSelector:
    matchLabels:
      monitoring.gepardec.com/system: "true"
  datasource:
      name: Loki (Infrastructure)
      uid: logging-infrastructure
      type: loki
      url: ${LOKI_GATEWAY_ADDRESS}/infrastructure/
      access: proxy
      editable: true
      isDefault: false
      jsonData:
        httpMethod: POST
        httpHeaderName1: Authorization
        oauthPassThru: false
        tlsAuthWithCACert: true
        manageAlerts: false
      secureJsonData:
        httpHeaderValue1: Bearer ${BEARER_TOKEN}
        tlsCACert: ${SERVICE_CA}
  {{- end }}