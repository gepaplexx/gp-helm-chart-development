apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gp-grafana-instance.labels" . | nindent 4 }}
    {{- if .Values.systemDashboards }}
    monitoring.gepardec.com/system: "true"
    {{- end }}
spec:
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: 1Gi
      storageClassName: cephfs-fspool-cluster
  config:
    server:
      root_url: https://{{ .Values.ingress.hostname }}
    auth:
      disable_login_form: "False"
      disable_signout_menu: "False"
    auth.generic_oauth:
      client_id: {{ .Values.sso.keycloak.clientId }}
      enabled: "true"
      client_secret: ""
      allow_sign_up: "true"
      token_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/token
      api_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/userinfo
      role_attribute_path: >-
        contains(groups[*], '{{ .Values.auth.adminGroups }}') && 'GrafanaAdmin' || contains(groups[*],
        '{{ .Values.auth.editorGroups }}') && 'Editor' || 'Viewer'
      auth_url: >-
        {{ .Values.sso.keycloak.realmUrl }}/protocol/openid-connect/auth
      scopes: openid profile offline_access
    auth.anonymous:
      enabled: "false"
    log:
      level: warn
      mode: console
    log.frontend:
      enabled: "true"
    security:
      admin_user: {{ default "admin" .Values.auth.admin.user }}
    feature_toggles:
      enable: accessTokenExpirationCheck autoMigrateOldPanels correlations publicDashboards nestedFolders
  deployment:
    spec:
      template:
        spec:
          containers:
            - name: grafana
              image: {{ .Values.grafana.version }}
              resources:
                requests:
                  cpu: "25m"
                  memory: "125Mi"
                limits:
                  cpu: "100m"
                  memory: "256Mi"
              volumeMounts:
                - mountPath: /var/lib/grafana
                  name: grafana-data
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: {{ .Release.Name }}-pvc