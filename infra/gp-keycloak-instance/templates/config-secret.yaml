{{- if or .Values.persistence.enabled .Values.provider.openshift.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: '{{ .Values.postgresql.auth.existingSecret }}'
  namespace: {{ .Release.Namespace }}
spec:
  dataFrom:
    - extract:
        key: keycloak
        conversionStrategy: Default
        decodingStrategy: None
  refreshInterval: 12h
  secretStoreRef:
    kind: ClusterSecretStore
    name: internal-cluster-store
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    name: keycloak-config
    template:
      data:
        username: {{ .Values.postgresql.auth.username }}
        clientSecret: {{`'{{ .provider_secret_openshift }}'`}}
        password: {{`'{{ .db_password }}'`}}
        postgres-password: {{`'{{ .db_password }}'`}}

---
{{- if .Values.provider.openshift.enabled }}
apiVersion: redhatcop.redhat.io/v1alpha1
kind: Patch
metadata:
  name: patch-keycloak-oauthclient
  namespace: {{ .Values.patch.namespace }}
spec:
  serviceAccountRef:
    name: {{ .Values.patch.serviceAccount }}
  patches:
    patch-oauthclient:
      targetObjectRef:
        apiVersion: oauth.openshift.io/v1
        kind: OAuthClient
        name: keycloak
      patchTemplate: |
        secret: {{`{{ (index . 1).data.clientSecret | b64dec }}`}}
      patchType: application/merge-patch+json
      sourceObjectRefs:
        - apiVersion: v1
          kind: Secret
          name: keycloak-config
          namespace: {{ .Release.Namespace }}
{{- end }}
{{- end }}