apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipelines-sa-userid-1000
  namespace: {{ .Release.Namespace }}
imagePullSecrets:
  - name: ghcr-pat
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: operate-workflow-sa
  namespace: {{ .Release.Namespace }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ghcr-pat
  namespace: {{ .Release.Namespace }}
spec:
  data:
    - remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: {{ .Release.Namespace }}/ghcr-pat # Add this to vault manually
        property: config.json
      secretKey: mysecret
  refreshInterval: 10h
  secretStoreRef:
    {{- toYaml .Values.secretStoreRef | nindent 4 }}
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
    name: ghcr-pat
    template:
      data:
        .dockerconfigjson: "{{ "{{" }} .mysecret | toString {{ "}}" }}"
      type: kubernetes.io/dockerconfigjson

---
{{- if not (lookup "security.openshift.io/v1" "SecurityContextConstraints" "" "pipelines-scc-userid-1000") }}
kind: SecurityContextConstraints
metadata:
  name: pipelines-scc-userid-1000
  namespace: {{ .Release.Namespace }}
  labels:
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: MustRunAs
groups:
  - system:cluster-admins
priority: 5
readOnlyRootFilesystem: false
requiredDropCapabilities:
  - MKNOD
runAsUser:
  type: MustRunAs
  uid: 1000
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users: []
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
{{- end }}
---
{{- if not (lookup "rbac.authorization.k8s.io/v1" "ClusterRole" "" "pipelines-scc-userid-1000-clusterrole") }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipelines-scc-userid-1000-clusterrole
  labels:
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - pipelines-scc-userid-1000
    resources:
      - securitycontextconstraints
    verbs:
      - use
{{- end}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipelines-scc-userid-1000-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipelines-scc-userid-1000-clusterrole
subjects:
  - kind: ServiceAccount
    name: pipelines-sa-userid-1000
  - kind: ServiceAccount
    name: new-repo-sa




