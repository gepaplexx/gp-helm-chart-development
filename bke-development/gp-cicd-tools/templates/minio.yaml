{{- if .Values.argo_workflows.archive.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minio-nonroot-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:nonroot-v2
subjects:
  - kind: ServiceAccount
    name: {{ .Values.minio.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: minio-artifact-repository
  namespace: {{ .Release.Namespace }}
spec:
  encryptedData:
    secretkey: {{ .Values.argo_workflows.archive.secretkey }}
    root-password: {{ .Values.argo_workflows.archive.secretkey }}
  template:
    data:
      accesskey: minio
      root-user: minio
    metadata: {}
    type: Opaque
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: clone-minio-secret
spec:
  validationFailureAction: enforce
  rules:
    - name: Clone Minio Secret
      match:
        any:
        - resources:
            kinds:
            - Namespace
            names:
            - "*-cicd"
      exclude:
        any:
        - resources:
            kinds:
            - Namespace
            names:
            - gepaplexx-cicd-tools
      generate:
        kind: Secret
        apiVersion: v1
        name: minio-artifact-repository
        # namespace for the generated resource
        namespace: "{{`{{request.object.metadata.name}}`}}"
        synchronize : true
        clone:
          namespace: {{ .Release.Namespace }}
          name: minio-artifact-repository
{{- end }}